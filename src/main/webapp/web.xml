<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee                       
http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframwork.web.context.ContextLoaderListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframwork.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	
	
	<servlet>
		<servlet-name>default</servlet-name>
		<servlet-class>org.apache.catalina.servlets.DefaultServlet</servlet-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>0</param-value>
		</init-param>
		<init-param>
			<param-name>listings</param-name>
			<param-value>false</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>


	
	<servlet>
		<servlet-name>jsp</servlet-name>
		<servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
		<init-param>
			<param-name>fork</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>xpoweredBy</param-name>
			<param-value>false</param-value>
		</init-param>
		<load-on-startup>3</load-on-startup>
	</servlet>


	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- The mappings for the JSP servlet -->
	<servlet-mapping>
		<servlet-name>jsp</servlet-name>
		<url-pattern>*.jsp</url-pattern>
		<url-pattern>*.jspx</url-pattern>
	</servlet-mapping>

	<!-- The mapping for the SSI servlet -->
	<!-- <servlet-mapping> <servlet-name>ssi</servlet-name> <url-pattern>*.shtml</url-pattern> 
		</servlet-mapping> -->

	<!-- The mapping for the CGI Gateway servlet -->

	<!-- <servlet-mapping> <servlet-name>cgi</servlet-name> <url-pattern>/cgi-bin/*</url-pattern> 
		</servlet-mapping> -->


	<!-- ================== Built In Filter Definitions ===================== -->

	<!-- A filter that sets various security related HTTP Response headers. -->
	<!-- This filter supports the following initialization parameters -->
	<!-- (default values are in square brackets): -->
	<!-- -->
	<!-- hstsEnabled Should the HTTP Strict Transport Security -->
	<!-- (HSTS) header be added to the response? See -->
	<!-- RFC 6797 for more information on HSTS. [true] -->
	<!-- -->
	<!-- hstsMaxAgeSeconds The max age value that should be used in the -->
	<!-- HSTS header. Negative values will be treated -->
	<!-- as zero. [0] -->
	<!-- -->
	<!-- hstsIncludeSubDomains -->
	<!-- Should the includeSubDomains parameter be -->
	<!-- included in the HSTS header. -->
	<!-- -->
	<!-- antiClickJackingEnabled -->
	<!-- Should the anti click-jacking header -->
	<!-- X-Frame-Options be added to every response? -->
	<!-- [true] -->
	<!-- -->
	<!-- antiClickJackingOption -->
	<!-- What value should be used for the header. Must -->
	<!-- be one of DENY, SAMEORIGIN, ALLOW-FROM -->
	<!-- (case-insensitive). [DENY] -->
	<!-- -->
	<!-- antiClickJackingUri IF ALLOW-FROM is used, what URI should be -->
	<!-- allowed? [] -->
	<!-- -->
	<!-- blockContentTypeSniffingEnabled -->
	<!-- Should the header that blocks content type -->
	<!-- sniffing be added to every response? [true] -->
	<!-- <filter> <filter-name>httpHeaderSecurity</filter-name> <filter-class>org.apache.catalina.filters.HttpHeaderSecurityFilter</filter-class> 
		<async-supported>true</async-supported> </filter> -->

	<!-- A filter that sets character encoding that is used to decode -->
	<!-- parameters in a POST request -->
	<!-- <filter> <filter-name>setCharacterEncodingFilter</filter-name> <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class> 
		<init-param> <param-name>encoding</param-name> <param-value>UTF-8</param-value> 
		</init-param> <async-supported>true</async-supported> </filter> -->

	<!-- A filter that triggers request parameters parsing and rejects the -->
	<!-- request if some parameters were skipped because of parsing errors or -->
	<!-- request size limitations. -->
	<!-- <filter> <filter-name>failedRequestFilter</filter-name> <filter-class> 
		org.apache.catalina.filters.FailedRequestFilter </filter-class> <async-supported>true</async-supported> 
		</filter> -->


	<!-- NOTE: An SSI Servlet is also available as an alternative SSI -->
	<!-- implementation. Use either the Servlet or the Filter but NOT both. -->
	<!-- -->
	<!-- Server Side Includes processing filter, which processes SSI -->
	<!-- directives in HTML pages consistent with similar support in web -->
	<!-- servers like Apache. Traditionally, this filter is mapped to the -->
	<!-- URL pattern "*.shtml", though it can be mapped to "*" as it will -->
	<!-- selectively enable/disable SSI processing based on mime types. For -->
	<!-- this to work you will need to uncomment the .shtml mime type -->
	<!-- definition towards the bottom of this file. -->
	<!-- The contentType init param allows you to apply SSI processing to JSP -->
	<!-- pages, javascript, or any other content you wish. This filter -->
	<!-- supports the following initialization parameters (default values are -->
	<!-- in square brackets): -->
	<!-- -->
	<!-- contentType A regex pattern that must be matched before -->
	<!-- SSI processing is applied. -->
	<!-- [text/x-server-parsed-html(;.*)?] -->
	<!-- -->
	<!-- debug Debugging detail level for messages logged -->
	<!-- by this servlet. [0] -->
	<!-- -->
	<!-- expires The number of seconds before a page with SSI -->
	<!-- directives will expire. [No default] -->
	<!-- -->
	<!-- isVirtualWebappRelative -->
	<!-- Should "virtual" paths be interpreted as -->
	<!-- relative to the context root, instead of -->
	<!-- the server root? [false] -->
	<!-- -->
	<!-- allowExec Is use of the exec command enabled? [false] -->

	<!-- <filter> <filter-name>ssi</filter-name> <filter-class> org.apache.catalina.ssi.SSIFilter 
		</filter-class> <init-param> <param-name>contentType</param-name> <param-value>text/x-server-parsed-html(;.*)?</param-value> 
		</init-param> <init-param> <param-name>debug</param-name> <param-value>0</param-value> 
		</init-param> <init-param> <param-name>expires</param-name> <param-value>666</param-value> 
		</init-param> <init-param> <param-name>isVirtualWebappRelative</param-name> 
		<param-value>false</param-value> </init-param> </filter> -->


	<!-- ==================== Built In Filter Mappings ====================== -->

	<!-- The mapping for the HTTP header security Filter -->
	<!-- <filter-mapping> <filter-name>httpHeaderSecurity</filter-name> <url-pattern>/*</url-pattern> 
		<dispatcher>REQUEST</dispatcher> </filter-mapping> -->

	<!-- The mapping for the Set Character Encoding Filter -->
	<!-- <filter-mapping> <filter-name>setCharacterEncodingFilter</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->

	<!-- The mapping for the Failed Request Filter -->
	<!-- <filter-mapping> <filter-name>failedRequestFilter</filter-name> <url-pattern>/*</url-pattern> 
		</filter-mapping> -->

	<!-- The mapping for the SSI Filter -->
	<!-- <filter-mapping> <filter-name>ssi</filter-name> <url-pattern>*.shtml</url-pattern> 
		</filter-mapping> -->


	<!-- ==================== Default Session Configuration ================= -->
	<!-- You can set the default session timeout (in minutes) for all newly -->
	<!-- created sessions by modifying the value below. -->

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>


	<!-- ===================== Default MIME Type Mappings =================== -->
	<!-- When serving static resources, Tomcat will automatically generate -->
	<!-- a "Content-Type" header based on the resource's filename extension, -->
	<!-- based on these mappings. Additional mappings can be added here (to -->
	<!-- apply to all web applications), or in your own application's web.xml -->
	<!-- deployment descriptor. -->

	
	<mime-mapping> 
	<extension>doc</extension> 
	<mime-type>application/msword</mime-type> 
	</mime-mapping> 
	<mime-mapping> 
	<extension>xls</extension> 
	<mime-type>application/msexcel</mime-type> 
	</mime-mapping> 
	<mime-mapping> 
	<extension>pdf</extension> 
	<mime-type>application/pdf</mime-type> 
	</mime-mapping> 
	<mime-mapping> 
	<extension>zip</extension> 
	<mime-type>application/zip</mime-type> 
	</mime-mapping> 
	<mime-mapping> 
	<extension>rar</extension> 
	<mime-type>application/rar</mime-type> 
	</mime-mapping> 
	<mime-mapping> 
	<extension>txt</extension> 
	<mime-type>application/txt</mime-type> 
	</mime-mapping> 
	<mime-mapping> 
	<extension>chm</extension> 
	<mime-type>application/mshelp</mime-type> 
	</mime-mapping> 
	<mime-mapping> 
	<extension>mp3</extension> 
	<mime-type>audio/x-mpeg</mime-type> 
</mime-mapping> 

	<!-- ==================== Default Welcome File List ===================== -->
	<!-- When a request URI refers to a directory, the default servlet looks -->
	<!-- for a "welcome file" within that directory and, if present, to the -->
	<!-- corresponding resource URI for display. -->
	<!-- If no welcome files are present, the default servlet either serves 
		a -->
	<!-- directory listing (see default servlet configuration on how to -->
	<!-- customize) or returns a 404 status, depending on the value of the -->
	<!-- listings setting. -->
	<!-- -->
	<!-- If you define welcome files in your own application's web.xml -->
	<!-- deployment descriptor, that list *replaces* the list configured -->
	<!-- here, so be sure to include any of the default values that you wish -->
	<!-- to use within your application. -->

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

</web-app>